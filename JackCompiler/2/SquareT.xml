<tokens>
<identifier> class </identifier>
<identifier> Square </identifier>
<identifier> { </identifier>
<identifier> field </identifier>
<identifier> int </identifier>
<identifier> x, </identifier>
<identifier> y; </identifier>
<identifier> field </identifier>
<identifier> int </identifier>
<identifier> size; </identifier>
<identifier> constructor </identifier>
<identifier> Square </identifier>
<identifier> new(int </identifier>
<identifier> Ax, </identifier>
<identifier> int </identifier>
<identifier> Ay, </identifier>
<identifier> int </identifier>
<identifier> Asize) </identifier>
<identifier> { </identifier>
<identifier> let </identifier>
<identifier> x </identifier>
<identifier> = </identifier>
<identifier> Ax; </identifier>
<identifier> let </identifier>
<identifier> y </identifier>
<identifier> = </identifier>
<identifier> Ay; </identifier>
<identifier> let </identifier>
<identifier> size </identifier>
<identifier> = </identifier>
<identifier> Asize; </identifier>
<identifier> do </identifier>
<identifier> draw(); </identifier>
<identifier> return </identifier>
<identifier> this; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> dispose() </identifier>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Memory.deAlloc(this); </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> draw() </identifier>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(true); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> erase() </identifier>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(false); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> incSize() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> (((y </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> < </identifier>
<integerConstant> 254) </integerConstant>
<identifier> & </identifier>
<identifier> ((x </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> < </identifier>
<integerConstant> 510)) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> erase(); </identifier>
<identifier> let </identifier>
<identifier> size </identifier>
<identifier> = </identifier>
<identifier> size </identifier>
<identifier> + </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> draw(); </identifier>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> decSize() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> (size </identifier>
<identifier> > </identifier>
<integerConstant> 2) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> erase(); </identifier>
<identifier> let </identifier>
<identifier> size </identifier>
<identifier> = </identifier>
<identifier> size </identifier>
<identifier> - </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> draw(); </identifier>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> moveUp() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> (y </identifier>
<identifier> > </identifier>
<integerConstant> 1) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(false); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> (y </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> - </identifier>
<integerConstant> 1, </integerConstant>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> let </identifier>
<identifier> y </identifier>
<identifier> = </identifier>
<identifier> y </identifier>
<identifier> - </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> Screen.setColor(true); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<integerConstant> 1); </integerConstant>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> moveDown() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> ((y </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> < </identifier>
<integerConstant> 254) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(false); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<integerConstant> 1); </integerConstant>
<identifier> let </identifier>
<identifier> y </identifier>
<identifier> = </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> Screen.setColor(true); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> (y </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> - </identifier>
<integerConstant> 1, </integerConstant>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> moveLeft() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> (x </identifier>
<identifier> > </identifier>
<integerConstant> 1) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(false); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle((x </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> - </identifier>
<integerConstant> 1, </integerConstant>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> let </identifier>
<identifier> x </identifier>
<identifier> = </identifier>
<identifier> x </identifier>
<identifier> - </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> Screen.setColor(true); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<integerConstant> 1, </integerConstant>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> } </identifier>
<identifier> method </identifier>
<identifier> void </identifier>
<identifier> moveRight() </identifier>
<identifier> { </identifier>
<identifier> if </identifier>
<identifier> ((x </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> < </identifier>
<integerConstant> 510) </integerConstant>
<identifier> { </identifier>
<identifier> do </identifier>
<identifier> Screen.setColor(false); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle(x, </identifier>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<integerConstant> 1, </integerConstant>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> let </identifier>
<identifier> x </identifier>
<identifier> = </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<integerConstant> 2; </integerConstant>
<identifier> do </identifier>
<identifier> Screen.setColor(true); </identifier>
<identifier> do </identifier>
<identifier> Screen.drawRectangle((x </identifier>
<identifier> + </identifier>
<identifier> size) </identifier>
<identifier> - </identifier>
<integerConstant> 1, </integerConstant>
<identifier> y, </identifier>
<identifier> x </identifier>
<identifier> + </identifier>
<identifier> size, </identifier>
<identifier> y </identifier>
<identifier> + </identifier>
<identifier> size); </identifier>
<identifier> } </identifier>
<identifier> return; </identifier>
<identifier> }} </identifier>
</tokens>
