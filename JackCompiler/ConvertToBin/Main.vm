function Main.main 2
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 1
push local 1
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label MainwhL1
push local 2
not
if-goto MainwhL0
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push constant 9000
push local 1
add
push local 0
call Memory.poke 2
pop temp 0
push local 1
push constant 16
gt
not
not
if-goto MainifL0
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto MainifL2
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto MainifL3
label MainifL2
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label MainifL3
goto MainifL1
label MainifL0
push constant 0
pop local 2
label MainifL1
goto MainwhL1
label MainwhL0
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto MainifL4
push constant 1
return
goto MainifL5
label MainifL4
push argument 0
push constant 2
call Math.multiply 2
return
label MainifL5
return
function Main.fillMemory 0
label MainwhL3
push argument 1
push constant 0
gt
not
if-goto MainwhL2
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto MainwhL3
label MainwhL2
push constant 0
return
